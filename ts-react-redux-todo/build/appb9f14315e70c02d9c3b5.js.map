{"version":3,"sources":["webpack:///./components/Footer/style.css?7d74","webpack:///./components/TodoItem/style.css?7ca0","webpack:///./components/TodoList/style.css?1825","webpack:///./components/TodoTextInput/style.css?718a","webpack:///./app.tsx","webpack:///./containers/style.css","webpack:///./utils/index.ts","webpack:///./store/models/TodoModel.ts","webpack:///./components/Footer/index.tsx","webpack:///./components/TodoTextInput/index.tsx","webpack:///./components/Header/index.tsx","webpack:///./components/TodoItem/index.tsx","webpack:///./components/TodoList/index.tsx","webpack:///./containers/index.tsx","webpack:///./middleware/logger.ts","webpack:///./store/reducers/todos.ts","webpack:///./store/reducers/index.ts","webpack:///./store/index.ts","webpack:///./main.tsx","webpack:///./store/actions/todos.ts"],"names":["module","exports","normal","filters","selected","count","clearCompleted","toggle","destroy","edit","editing","view","completed","main","toggleAll","new","__webpack_require__","d","__webpack_exports__","App","react__WEBPACK_IMPORTED_MODULE_0__","react_router__WEBPACK_IMPORTED_MODULE_1__","react_router__WEBPACK_IMPORTED_MODULE_2__","_containers__WEBPACK_IMPORTED_MODULE_3__","react_hot_loader__WEBPACK_IMPORTED_MODULE_4__","Object","path","component","omit","target","names","_i","arguments","length","keys","reduce","res","key","includes","TodoModel","Filter","FILTER_TITLES","Footer_a","SHOW_ALL","SHOW_ACTIVE","SHOW_COMPLETED","Footer_Footer","_super","Footer","__extends","prototype","renderTodoCount","activeCount","this","props","itemWord","react","className","Footer_style","renderFilterLink","filter","_b","selectedFilter","onClickFilter","classnames","_a","style","cursor","onClick","children","renderClearButton","completedCount","onClickClearCompleted","render","_this","map","defaultProps","TodoTextInput_TodoTextInput","TodoTextInput","context","call","state","text","handleBlur","bind","handleSubmit","handleChange","TodoTextInput_extends","event","value","trim","newTodo","onSave","setState","currentTarget","which","classes","TodoTextInput_style","type","autoFocus","placeholder","onBlur","onChange","onKeyDown","Header_Header","Header","handleSave","Header_extends","addTodo","TodoItem_TodoItem","TodoItem","TodoItem_extends","handleDoubleClick","id","deleteTodo","editTodo","element","todo","completeTodo","TodoItem_style","checked","onDoubleClick","TodoList_TodoList","TodoList","TodoList_extends","renderToggeAll","todos","actions","hasIncompleted","some","TodoList_style","completeAll","FILTER_VALUES","FILTER_FUNCTIONS","containers_a","containers_App","handleClearCompleted","handleFilterChange","containers_extends","history","push","filteredTodos","__decorate","es","ownProps","hash","location","replace","find","dispatch","redux","actions_todos","logger","store","next","action","todoReducer","handleActions","Type","ADD_TODO","payload","max","Math","DELETE_TODO","EDIT_TODO","__assign","COMPLETE_TODO","COMPLETE_ALL","CLEAR_COMPLETED","rootReducer","initialState","middleware","main_history","esm_history","main_store","react_dom","Router","app","document","getElementById","TodoActions","redux_actions__WEBPACK_IMPORTED_MODULE_0__"],"mappings":"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","file":"appb9f14315e70c02d9c3b5.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"normal\":\"_3FIL-\",\"filters\":\"_1BcvS\",\"selected\":\"_2piwY\",\"count\":\"_3khYx\",\"clearCompleted\":\"_3tf6X\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"normal\":\"_1Q51z\",\"toggle\":\"_1qmDW\",\"destroy\":\"_2IRed\",\"edit\":\"_2HdII\",\"editing\":\"_2EWh0 _1Q51z\",\"view\":\"_2XJXA\",\"completed\":\"Cokm5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"_3k-Zn\",\"normal\":\"_3tkZl\",\"editing\":\"_30p4P\",\"edit\":\"_1l0KG\",\"view\":\"_217L8\",\"toggle\":\"_36a-n\",\"completed\":\"_1cN6x\",\"destroy\":\"_1mxli\",\"toggleAll\":\"_38AgA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"new\":\"_1MSku\",\"edit\":\"_21OYt\"};","import * as React from 'react'\nimport { Route, Switch } from 'react-router'\nimport { App as TodoApp } from './containers'\nimport { hot } from 'react-hot-loader'\n\nexport const App = hot(module)(() => (\n  <Switch>\n    <Route path='/' component={TodoApp} />\n  </Switch>\n))","// extracted by mini-css-extract-plugin\nmodule.exports = {\"normal\":\"_2eZ7s\"};","export function omit<T extends object, K extends keyof T>(target: T, ...names: K[]): Omit<T, K> {\n  return (Object.keys(target) as K[]).reduce(\n    (res, key) => {\n      if (!names.includes(key)) {\n        res[key] = target[key]\n      }\n      return res\n    },\n    {} as any\n  )\n}\n","export interface TodoModel {\n  id: number\n  text: string\n  completed: boolean\n}\n\nexport namespace TodoModel {\n  export enum Filter {\n    SHOW_ALL = 'ALL',\n    SHOW_ACTIVE = 'ACTINVE',\n    SHOW_COMPLETED = 'COMPLETED'\n  }\n}\n","import * as React from 'react'\nimport * as styles from './style.css'\nimport * as classNames from 'classnames'\nimport { TodoModel } from '../../store/models'\n\nexport const FILTER_TITLES = {\n  [TodoModel.Filter.SHOW_ALL]: 'ALL',\n  [TodoModel.Filter.SHOW_ACTIVE]: 'ACTIVE',\n  [TodoModel.Filter.SHOW_COMPLETED]: 'COMPLETED'\n}\n\nexport namespace Footer {\n  export interface IProps {\n    filter: TodoModel.Filter\n    activeCount?: number\n    completedCount?: number\n    onClickFilter: (filter: TodoModel.Filter) => any\n    onClickClearCompleted: () => any\n  }\n}\n\nexport class Footer extends React.Component<Footer.IProps> {\n  static defaultProps: Partial<Footer.IProps> = {\n    activeCount: 0,\n    completedCount: 0\n  }\n\n  renderTodoCount(): JSX.Element {\n    const { activeCount } = this.props\n    const itemWord = activeCount === 1 ? 'item' : 'items'\n    return (\n      <span className={styles.count}>\n        <strong>{activeCount || 'no' }</strong>\n        {itemWord} left\n      </span>\n    )\n  }\n\n  renderFilterLink(filter: TodoModel.Filter): JSX.Element {\n    const { filter: selectedFilter, onClickFilter } = this.props\n\n    return (\n      <a\n        className={classNames({ [styles.selected]: filter === selectedFilter })}\n        style={{ cursor: 'pointer' }}\n        onClick={() => onClickFilter(filter)}\n        children={FILTER_TITLES[filter]}\n      />\n    )\n  }\n\n  renderClearButton(): JSX.Element | void {\n    const { completedCount, onClickClearCompleted } = this.props\n    if (completedCount! > 0) {\n      return (\n        <button \n        className={styles.clearCompleted}\n        onClick={onClickClearCompleted}\n        children={'Clear completed'}\n        />\n      )\n    }\n  }\n\n  render() {\n    return (\n      <footer className={styles.normal}>\n        {this.renderTodoCount()}\n        <ul className={styles.filters}>\n          {\n            (Object.keys(TodoModel.Filter) as (keyof typeof TodoModel.Filter)[]).map((key) => (\n              <li key={key} children={this.renderFilterLink(TodoModel.Filter[key])} />\n            ))\n          }\n        </ul>\n        { this.renderClearButton() }\n      </footer>\n    )\n  }\n}","import * as React from 'react'\nimport * as classNames from 'classnames'\nimport * as styles from './style.css'\n\nexport namespace TodoTextInput {\n  export interface IProps {\n    text?: string\n    placeholder?: string\n    newTodo?: boolean\n    editing?: boolean\n    onSave: (text: string) => void\n  }\n\n  export interface State {\n    text: string\n  }\n}\n\nexport class TodoTextInput extends React.Component<TodoTextInput.IProps, TodoTextInput.State> {\n  constructor(props: TodoTextInput.IProps, context?: any) {\n    super(props, context)\n    this.state = { text: this.props.text || '' }\n    this.handleBlur = this.handleBlur.bind(this)\n    this.handleSubmit = this.handleSubmit.bind(this)\n    this.handleChange = this.handleChange.bind(this)\n  }\n\n  handleBlur(event: React.FocusEvent<HTMLInputElement>) {\n    const text = event.target.value.trim()\n    if (!this.props.newTodo) {\n      this.props.onSave(text)\n    }\n  }\n\n  handleChange(event: React.ChangeEvent<HTMLInputElement>) {\n    this.setState({ text: event.target.value })\n  }\n\n  handleSubmit(event: React.KeyboardEvent<HTMLInputElement>) {\n    const text = event.currentTarget.value.trim()\n    if (event.which === 13) {\n      this.props.onSave(text)\n      if (this.props.newTodo) {\n        this.setState({ text: '' })\n      }\n    }\n  }\n\n  render() {\n    const classes = classNames(\n      {\n        [styles.edit]: this.props.editing,\n        [styles.new]: this.props.newTodo\n      }\n    )\n    return (\n      <input\n        className={classes}\n        type='text'\n        autoFocus\n        placeholder={this.props.placeholder}\n        value={this.state.text}\n        onBlur={this.handleBlur}\n        onChange={this.handleChange}\n        onKeyDown={this.handleSubmit}\n      />\n    )\n  }\n}","import * as React from 'react'\nimport { TodoActions } from '../../store/actions/todos'\nimport { TodoTextInput } from '../TodoTextInput'\n\nexport namespace Header {\n  export interface IProps {\n    addTodo: typeof TodoActions.addTodo\n  }\n}\n\nexport class Header extends React.Component<Header.IProps> {\n  constructor(props: Header.IProps, context?: any) {\n    super(props, context)\n    this.handleSave = this.handleSave.bind(this)\n  }\n\n  handleSave(text: string) {\n    if (text.length) {\n      this.props.addTodo({ text })\n    }\n  }\n\n  render() {\n    return (\n      <header>\n        <h1>Todos</h1>\n        <TodoTextInput\n          newTodo\n          onSave={this.handleSave}\n          placeholder='enter new todo!!'\n        />\n      </header>\n    )\n  }\n}\n","import * as React from 'react'\nimport { TodoModel } from '@store/models'\nimport { TodoActions } from '@store/actions'\nimport { TodoTextInput } from '../TodoTextInput'\nimport * as classNames from 'classnames'\nimport * as styles from './style.css'\n\nexport namespace TodoItem {\n  export interface IProps {\n    todo: TodoModel\n    editTodo: typeof TodoActions.editTodo\n    deleteTodo: typeof TodoActions.deleteTodo\n    completeTodo: typeof TodoActions.completeTodo\n  }\n\n  export interface IState {\n    editing: boolean\n  }\n}\n\nexport class TodoItem extends React.Component<\n  TodoItem.IProps,\n  TodoItem.IState\n> {\n  constructor(props: TodoItem.IProps, context?: any) {\n    super(props, context)\n    this.state = { editing: false }\n  }\n\n  handleDoubleClick() {\n    this.setState({ editing: true })\n  }\n\n  handleSave(id: number, text: string) {\n    if (text.length === 0) {\n      this.props.deleteTodo(id)\n    } else {\n      this.props.editTodo({ id, text })\n    }\n    this.setState({ editing: false })\n  }\n\n  render() {\n    const { todo, completeTodo, deleteTodo } = this.props\n    let element\n    if (this.state.editing) {\n      element = (\n        <TodoTextInput\n          text={todo.text}\n          editing={this.state.editing}\n          onSave={(text) => todo.id && this.handleSave(todo.id, text)}\n        />\n      )\n    } else {\n      element = (\n        <div>\n          <input\n            className={styles.toggle}\n            type='checkbox'\n            checked={todo.completed}\n            onChange={() => todo.id && completeTodo(todo.id)}\n          />\n          <label onDoubleClick={() => this.handleDoubleClick()}>\n            {todo.text}\n          </label>\n          <button\n            className={styles.destroy}\n            onClick={() => {\n              if (todo.id) deleteTodo(todo.id)\n            }}\n          />\n        </div>\n      )\n    }\n\n    const classes = classNames({\n      [styles.completed]: todo.completed,\n      [styles.editiong]: this.state.editing,\n      [styles.normal]: !this.state.editing,\n    })\n\n    return <li className={classes}>{element}</li>\n  }\n}\n","import * as React from 'react'\nimport * as styles from './style.css'\nimport { TodoActions } from '../../store/actions/todos'\nimport { TodoItem } from '../TodoItem'\nimport { TodoModel } from '../../store/models'\n\nexport namespace TodoList {\n  export interface IProps {\n    todos: TodoModel[]\n    actions: TodoActions\n  }\n}\n\nexport class TodoList extends React.Component<TodoList.IProps> {\n\n  renderToggeAll(): JSX.Element | void {\n    const { todos, actions } = this.props\n    if (todos.length > 0) {\n      const hasIncompleted = todos.some((todo) => !todo.completed)\n\n      return (\n        <input\n          className={styles.toggleAll}\n          type='checkbox'\n          checked={hasIncompleted}\n          onChange={actions.completeAll}\n        />\n      )\n    }\n  }\n\n  render() {\n    const { todos, actions } = this.props\n\n    return (\n    <section className={styles.main}>{this.renderToggeAll()}\n      <ul className={styles.normal}>\n        {todos.map((todo) => (\n          <TodoItem\n            key={todo.id}\n            todo={todo}\n            completeTodo={actions.completeTodo}\n            deleteTodo={actions.deleteTodo}\n            editTodo={actions.editTodo}\n          />\n        ))}\n      </ul>\n    </section>)\n  }\n}\n","import * as React from 'react'\nimport * as styles from './style.css'\nimport { connect } from 'react-redux'\nimport { bindActionCreators, Dispatch } from 'redux'\nimport { RouteComponentProps } from 'react-router'\nimport { omit } from '../utils'\nimport { Header, Footer } from '../components'\nimport { TodoModel } from '../store/models'\nimport { RootState } from '../store/reducers'\nimport { TodoActions } from '../store/actions'\nimport { TodoList } from '../components/TodoList'\n\nconst FILTER_VALUES = (Object.keys(\n  TodoModel.Filter,\n) as (keyof typeof TodoModel.Filter)[]).map((key) => TodoModel.Filter[key])\n\nconst FILTER_FUNCTIONS: Record<\n  TodoModel.Filter,\n  (todo: TodoModel) => boolean\n> = {\n  [TodoModel.Filter.SHOW_ALL]: () => true,\n  [TodoModel.Filter.SHOW_ACTIVE]: (todo) => !todo.completed,\n  [TodoModel.Filter.SHOW_COMPLETED]: (todo) => todo.completed,\n}\n\nexport namespace App {\n  export interface IProps extends RouteComponentProps<void> {\n    todos: RootState.TodoState\n    actions: TodoActions\n    filter: TodoModel.Filter\n  }\n}\n\n@connect(\n  (state: RootState, ownProps): Pick<App.IProps, 'todos' | 'filter'> => {\n    const hash = ownProps.location && ownProps.location.hash.replace('#', '')\n    const filter =\n      FILTER_VALUES.find((value) => value === hash) || TodoModel.Filter.SHOW_ALL\n    return { todos: state.todos, filter }\n  },\n  (dispatch: Dispatch): Pick<App.IProps, 'actions'> => ({\n    actions: bindActionCreators(omit(TodoActions, 'Type'), dispatch),\n  }),\n)\n\nexport class App extends React.Component<App.IProps> {\n  static defaultProps: Partial<App.IProps> = {\n    filter: TodoModel.Filter.SHOW_ALL,\n  }\n\n  constructor(props: App.IProps, context?: any) {\n    super(props, context)\n    this.handleClearCompleted = this.handleClearCompleted.bind(this)\n    this.handleFilterChange = this.handleFilterChange.bind(this)\n  }\n\n  handleClearCompleted(): void {\n    const hasCompletedTodo = this.props.todos.some(\n      (todo) => todo.completed || false,\n    )\n    if (hasCompletedTodo) {\n      this.props.actions.clearCompleted()\n    }\n  }\n\n  handleFilterChange(filter: TodoModel.Filter): void {\n    this.props.history.push(`#${filter}`)\n  }\n\n  render() {\n    const { todos, actions, filter } = this.props\n    const activeCount =\n      todos.length - todos.filter((todo) => todo.completed).length\n    const filteredTodos = filter\n      ? todos.filter(FILTER_FUNCTIONS[filter])\n      : todos\n    const completedCount = todos.reduce(\n      (count, todo) => (todo.completed ? count + 1 : count),\n      0,\n    )\n\n    return (\n      <div className={styles.normal}>\n        <Header addTodo={actions.addTodo} />\n        <TodoList todos={filteredTodos} actions={actions} />\n        <Footer\n          filter={filter}\n          activeCount={activeCount}\n          completedCount={completedCount}\n          onClickClearCompleted={this.handleClearCompleted}\n          onClickFilter={this.handleFilterChange}\n        />\n      </div>\n    )\n  }\n}\n","import { Middleware } from 'redux'\n\nexport const logger: Middleware = (store) => (next) => (action) => {\n  if (process.env.NODE_ENV !== 'production') {\n    console.log(action)\n  }\n  return next(action)\n}","import { handleActions } from 'redux-actions'\nimport { RootState } from './state'\nimport { TodoActions } from '../actions/todos'\nimport { TodoModel } from '../models'\n\nconst initialState: RootState.TodoState = [\n  {\n    id: 1,\n    text: 'Use Redux',\n    completed: false,\n  }\n]\n\nexport const todoReducer = handleActions<RootState.TodoState, TodoModel>(\n  {\n    [TodoActions.Type.ADD_TODO]: (state, action) => {\n      if (action.payload && action.payload.text) {\n        return [\n          {\n            id: state.reduce((max, todo) => Math.max(todo.id || 1, max), 0) + 1,\n            completed: false,\n            text: action.payload.text\n          },\n          ...state\n        ]\n      }\n      return state\n    },\n    [TodoActions.Type.DELETE_TODO]: (state, action) => {\n      return state.filter(todo => todo.id !== (action.payload as any))\n    },\n    [TodoActions.Type.EDIT_TODO]: (state, action) => {\n      return state.map(todo => {\n        if (!todo || !action || !action.payload) {\n          return todo\n        }\n        return (todo.id || 0) === action.payload.id ? { ...todo, text: action.payload.text } : todo\n      })\n    },\n    [TodoActions.Type.COMPLETE_TODO]: (state, action) => {\n      return state.map(todo => todo.id === (action.payload as any) ? { ...todo, completed: !todo.completed } : todo)\n    },\n    [TodoActions.Type.COMPLETE_ALL]: (state, action) => {\n      return state.map(todo => ({ ...todo, completed: true }))\n    },\n    [TodoActions.Type.CLEAR_COMPLETED]: (state, action) => {\n      return state.filter(todo => todo.completed === false)\n    }\n  },\n  initialState\n)","import { combineReducers } from 'redux'\nimport { RootState } from './state'\nimport { todoReducer } from './todos'\n\nexport { RootState }\n\nexport const rootReducer = combineReducers<RootState>({\n  todos: todoReducer as any,\n})\n","import { Store, createStore, applyMiddleware } from 'redux'\nimport { composeWithDevTools } from 'redux-devtools-extension'\nimport { logger } from '../middleware'\nimport { rootReducer, RootState } from './reducers'\n\nexport function configureStore(initialState?: RootState): Store<RootState> {\n  let middleware = applyMiddleware(logger)\n\n  if (process.env.NODE_ENV !== 'production') {\n    middleware = composeWithDevTools(middleware)\n  }\n\n  const store = createStore(rootReducer as any, initialState as any, middleware) as Store<RootState>\n\n  if (module.hot) {\n    module.hot.accept('./reducers', () => {\n      const nextReducer = require('./reducers')\n      store.replaceReducer(nextReducer)\n    })\n  }\n  return store\n}\n","import * as React from 'react'\nimport * as ReactDOM from 'react-dom'\nimport { Provider } from 'react-redux'\nimport { createBrowserHistory } from 'history'\nimport { configureStore } from './store'\nimport { Router } from 'react-router'\nimport { App } from './app'\n\nconst history = createBrowserHistory()\nconst store = configureStore()\n\nReactDOM.render(\n  <Provider store={store}>\n    <Router history={history}>\n      <App />\n    </Router>\n  </Provider>,\n  document.getElementById('app') as HTMLElement\n)\n","import { createAction } from 'redux-actions'\nimport { TodoModel } from '../models'\n\nexport namespace TodoActions {\n  export enum Type {\n    ADD_TODO = 'ADD_TODO',\n    EDIT_TODO = 'EDIT_TODO',\n    DELETE_TODO = 'DELETE_TODO',\n    COMPLETE_TODO = 'COMPLETE_TODO',\n    COMPLETE_ALL = 'COMPLETE_ALL',\n    CLEAR_COMPLETED = 'CLEAR_COMPLETED'\n  }\n\n  export const addTodo = createAction<PartialPick<TodoModel, 'text'>>(Type.ADD_TODO)\n  export const editTodo = createAction<PartialPick<TodoModel, 'id'>>(Type.EDIT_TODO)\n  export const deleteTodo = createAction<TodoModel['id']>(Type.DELETE_TODO)\n  export const completeTodo = createAction<TodoModel['id']>(Type.COMPLETE_TODO)\n  export const completeAll = createAction(Type.COMPLETE_ALL)\n  export const clearCompleted = createAction(Type.CLEAR_COMPLETED)\n}\n\nexport type TodoActions = omit<typeof TodoActions, 'Type'>\n"],"sourceRoot":""}